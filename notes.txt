Import/Export
----------------
1)Defult--> supports only one file. (import DefultData from "./vijay.js"). (you can use any name you want).
2)normal---> as an object

React
---------
React is JS library developed by Facebook for building UI, especially SPA(Single Page Application).

Key Features 
--------------
Component-Based:  UI is split into independent piece.
Efficient Rendering: Uses Virtual DOM for fast updates.
Re-usable Code: write once, use everywhere.

Node---> Runtime for JS.
NPM---> Node Package Manager.

changing terminal location
-----------------------------
cd "address"

Installing packages from NPM 
-------------------------------
>npm install "packages's name"

Creating new react application.
-----------------------------------
>npm create vite@latest
>npm install 

Run React Application
------------------------
npm run dev

JSX---> JavaScript XML
------------------------
it allows you to write HTML-like code inside JavaScript.

rules of JSX 
--------------
HTML into JS---> ()
JS into HTML---> {}
attributes should be in camel case (onClick,onSubmit).(class X---> className)
functional component can return only one parent element.

JSX---> to create components.
types
-----
1)functional components(mostly used, recommended).
2)class componants(rarely used)

Functional Component.
---------------------
it is a JS function---> it is going to return a HTNL element.

Props
-----
arguments passed inside a component.

State
-------
state is a special react object used to store dynamic data in a component.
when state changes, React re-renders the component to reflect the updated data.

Conditional Rendering 
------------------------
It is used to show or hide an element based on a condition.

And---> condition && (element)
Ternary Operator---> condition ? (element1) : (element2)

Hooks
-------
useState--->create and update a state in a component.
syntax
-------
const [name,setName]=useState(initVal)


Event handling in React 
------------------------
click, change, submit, mouseOver....

you should use only inline event Listeners.
>> should only mention the function name

Controlled Inputs
------------------
>>> enabling react engine to control the inputs.
  const [name, setName] = useState("");
  <input
          type="text"
          value={name}
          onChange={(e) => {
            setName(e.target.value);
          }}
    />


UseEffect
------------
used to run side effectin a functional component.

render--->  displays the UI based on the component.
mounting---> rendering at the first time..
re-rendering---> runs again to update UI because of a change in state, props...

syntax
------
useEffect(function)----> on every renders(mount, re-renders)
useEffect(function,[])----> on mount
useEffect(function,[state])----> on mount, re-render due to the change in specified state


post id--->
